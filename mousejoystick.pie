if starting then
   //Adjustable
   Pie.FrameRate = 100   //Mouse frequency
   var.M1_dpi = 1600   //Mouse resolution
   var.M1_Wheel = 22   //Throttle wheel split
   var.M1_Zoom = 20   //Zoom wheel split
   var.TrackirSens = 50 //TrackIR sens
   var.TrackIRAR = 1.78 //Aspect Ratio
   //Not adjustable
   var.M1_P = -1
   var.TrackIRZoom = 0
   var.M1_mapP = 60 * var.M1_Wheel
   var.M1_mapZ = 60 * var.M1_Zoom
   var.off = true
endif

//Mouse delta
var.dx = RemoveUnits((Mouse.DirectInputX - var.x)) / var.M1_dpi
var.dy = RemoveUnits((Mouse.DirectInputY - var.y)) / var.M1_dpi
var.dz = RemoveUnits((Mouse.DirectInputZ - var.Z))

if var.MouseSwallow then
   Mouse.DirectInputX = var.x
   Mouse.DirectInputY = var.y
   Mouse.DirectInputZ = var.z
else
   var.x = Mouse.DirectInputX
   var.y = Mouse.DirectInputY
   var.z = Mouse.DirectInputZ
   if (Keyboard.Ctrl) and (Mouse.LeftButton) then
      var.LB = true
   else
      var.LB = false
   endif
   if (Keyboard.Ctrl) and (Mouse.RightButton) then
      var.RB = true
   else
      var.RB = false
   endif
endif

if pressed (Mouse.MiddleButton) then var.off = not var.off

if (!var.off) then
   var.MouseSwallow = true
   if (!Keyboard.R) then
      if (!Keyboard.T) then
         //Combined axis
         if (!Mouse.LeftButton) then var.M1_Z += var.dx
         if released (Mouse.LeftButton) then var.M1_Z = var.M1_X
         if (!Mouse.RightButton) then var.M1_X += var.dx
         if released (Mouse.RightButton) then var.M1_X = var.M1_Z

         //Other axis
         var.M1_Y += var.dy
         var.M1_P += var.dz / var.M1_mapP

         //Reset joystick
         if (Mouse.LeftButton) and (Mouse.RightButton) then
            var.M1_X = 0
            var.M1_Y = 0
            var.M1_Z = 0
         endif
      endif
      if (Keyboard.T) then
         var.M1_TX += var.dx
         var.M1_TY += var.dy
         if pressed (Mouse.LeftButton) then var.M1_TZ -= 0.1
         if pressed (Mouse.RightButton) then var.M1_TZ += 0.1
         if (Mouse.LeftButton) and (Mouse.RightButton) then
            var.M1_TX = 0
            var.M1_TY = 0
            var.M1_TZ = 0
         endif
      endif
   endif
endif

if (Keyboard.R) then
   var.MouseSwallow = true
   if (var.dx <> 0) then
      var.TrackIRYaw = var.TrackIRYaw + var.TrackIRSens * var.TrackIRAR * var.dx
      if (var.TrackIRYaw < -180) then var.TrackIRYaw = var.TrackIRYaw + 360
      if (var.TrackIRYaw > 180) then var.TrackIRYaw = var.TrackIRYaw - 360
   endif
   if (var.dy <> 0) then
      var.TrackIRPitch = var.TrackIRPitch - var.TrackIRSens * var.dy
      if (var.TrackIRPitch < -180) then var.TrackIRPitch = var.TrackIRPitch + 360
      if (var.TrackIRPitch > 180) then var.TrackIRPitch = var.TrackIRPitch - 360
   endif

   if (var.TrackIRYaw < -30) then
      var.TrackIRShift = MapRange(var.TrackIRYaw, -30, -180, 0, -1)
      var.TrackIRHeight = MapRange(var.TrackIRYaw, -30, -180, 0, 1)
      var.TrackIRDist = MapRange(var.TrackIRYaw, -30, -180, 0, 1)
   else if (var.TrackIRYaw > 30) then
      var.TrackIRShift = MapRange(var.TrackIRYaw, 30, 180, 0, 1)
      var.TrackIRHeight = MapRange(var.TrackIRYaw, 30, 180, 0, 1)
      var.TrackIRDist = MapRange(var.TrackIRYaw, 30, 180, 0, 1)
   else if (var.TrackIRPitch < -10) then
      var.TrackIRShift = 0.0
      var.TrackIRHeight = MapRange(var.TrackIRPitch, -10, -30, 0, -1)
      var.TrackIRDist = MapRange(var.TrackIRPitch, -10, -30, 0, 1)
   else if (var.TrackIRPitch > 10) then
      var.TrackIRShift = 0.0
      var.TrackIRHeight = MapRange(var.TrackIRPitch, 10, 30, 0, 1)
      var.TrackIRDist = MapRange(var.TrackIRPitch, 10, 30, 0, 1)
   else
      var.TrackIRShift = 0
      var.TrackIRHeight = 0
      var.TrackIRDist = 0
   endif

   if (Mouse.RightButton) then
      var.TrackIRZoom -= var.dz / var.M1_mapZ * 5
   else
      var.TrackIRZoom -= var.dz / var.M1_mapZ
   endif

   if (Mouse.LeftButton) and (Mouse.RightButton) then
      var.TrackIRYaw = 0
      var.TrackIRPitch = 0
      var.TrackIRShift = 0
      var.TrackIRHeight = 0
      var.TrackIRDist = 0
   endif
else
   if (var.off) then var.MouseSwallow = false
endif

//TrackIR keeper
if (FakeTrackIR.Roll < var.TrackIRRoll) then
   FakeTrackIR.Roll = var.TrackIRRoll + 0.000001
else
   FakeTrackIR.Roll = var.TrackIRRoll - 0.000001
endif

//Limiter
if (var.M1_X < -1) then var.M1_X = -1
if (var.M1_X >  1) then var.M1_X =  1
if (var.M1_Y < -1) then var.M1_Y = -1
if (var.M1_Y >  1) then var.M1_Y =  1
if (var.M1_Z < -1) then var.M1_Z = -1
if (var.M1_Z >  1) then var.M1_Z =  1
if (var.M1_P < -1) then var.M1_P = -1
if (var.M1_P >  1) then var.M1_P =  1
if (var.M1_TX < -1) then var.M1_TX = -1
if (var.M1_TX >  1) then var.M1_TX =  1
if (var.M1_TY < -1) then var.M1_TY = -1
if (var.M1_TY >  1) then var.M1_TY =  1
if (var.M1_TZ < -1) then var.M1_TZ = -1
if (var.M1_TZ >  1) then var.M1_TZ =  1
if (var.TrackIRZoom < -1) then var.TrackIRZoom = -1
if (var.TrackIRZoom >  1) then var.TrackIRZoom =  1

//Translator
PPJoy1.Analog0 = var.M1_X          //Ailerons
PPJoy1.Analog1 = var.M1_Y          //Pitch
PPJoy1.Analog2 = var.M1_Z          //Rudder
PPJoy1.Analog3 = var.M1_TX         //Aileron trimmer
PPJoy1.Analog4 = var.M1_TY         //Pitch trimmer
PPJoy1.Analog5 = var.M1_TZ         //Rudder trimmer
PPJoy1.Analog6 = var.M1_P          //Throttle
PPJoy1.Analog7 = var.TrackIRZoom   //TrackIR zoom
PPJoy1.Digital0 = var.LB
PPJoy1.Digital1 = var.RB
FakeTrackIR.Yaw = FakeTrackIR.Yaw + 0.02 * (var.TrackIRYaw - FakeTrackIR.Yaw)
FakeTrackIR.Pitch = FakeTrackIR.Pitch + 0.02 * (var.TrackIRPitch - FakeTrackIR.Pitch)
FakeTrackIR.X = FakeTrackIR.X + 0.2 * (var.TrackIRShift - FakeTrackIR.X)
FakeTrackIR.Y = FakeTrackIR.Y + 0.2 * (var.TrackIRHeight - FakeTrackIR.Y)
FakeTrackIR.Z = FakeTrackIR.Z + 0.2 * (var.TrackIRDist - FakeTrackIR.Z)
