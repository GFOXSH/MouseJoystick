if starting then
	//Adjustable
	Pie.FrameRate = 1000	//Mouse frequency
	var.M1_dpi = 1600	//Mouse resolution
	var.M1_Wheel = 22	//Throttle wheel split
	//Not adjustable
	var.M1_P = -1
	var.M1_LB = -1
	var.M1_RB = -1
	var.M1_mapP = 60*var.M1_Wheel
	var.off = true
endif

//Turn on/off
if pressed (Mouse.MiddleButton) then
	var.off = not var.off
endif

if (var.off) then
	//Mouse control
	Mouse.Swallow = false
	//IL2 turret crutch
	if (Keyboard.Ctrl) then
	if (Mouse.x = 1 and Delta(Mouse.DirectInputX) > 0) then Mouse.x = 0
	if (Mouse.x = 0 and Delta(Mouse.DirectInputX) < 0) then Mouse.x = 1
	//if (Mouse.y = 1 and Delta(Mouse.DirectInputY) > 0) then Mouse.y = 0
	//if (Mouse.y = 0 and Delta(Mouse.DirectInputY) < 0) then Mouse.y = 1
endif
else
	//Mouse blocked
	Mouse.Swallow = true

	//Mouse delta
	var.dx = Delta(Mouse.DirectInputX)/var.M1_dpi
	var.dy = Delta(Mouse.DirectInputY)/var.M1_dpi
	var.dz = Delta(Mouse.DirectInputZ)

	if (!Keyboard.T) and (!Keyboard.R) then
		//Combined axis
		if (!Mouse.LeftButton) then var.M1_Z += var.dx
		if released (Mouse.LeftButton) then var.M1_Z = var.M1_X
		if (!Mouse.RightButton) then var.M1_X += var.dx
		if released (Mouse.RightButton) then var.M1_X = var.M1_Z

		//Other axis
		var.M1_Y += var.dy

		//Reset stick
		if (Mouse.LeftButton) and (Mouse.RightButton) then
			var.M1_X = 0
			var.M1_Y = 0
			var.M1_Z = 0
		endif
	endif
	
	//Throttle
	var.M1_P += var.dz/var.M1_mapP

	//Trimmers
	if (Keyboard.T) then
		var.M1_TX += var.dx
		var.M1_TY += var.dy
	endif
	if (Keyboard.T) and (Mouse.LeftButton) and (!Mouse.RightButton) then
			var.M1_RL = true
		else
			var.M1_RL = false
		endif
	if (Keyboard.T) and (!Mouse.LeftButton) and (Mouse.RightButton) then
		var.M1_RR = true
	else
		var.M1_RR = false
	endif
	if (Keyboard.T) and (Mouse.LeftButton) and (Mouse.RightButton) then
		var.M1_TX = 0
		var.M1_TY = 0
		var.M1_RC = true
	else
		var.M1_RC = false
	endif
	
	//Wheel brakes
	if (Keyboard.R) then
		var.M1_Y += var.dy
		var.M1_Z += var.dx
		var.M1_P += var.dz/var.M1_mapP
	endif
	if (Keyboard.R) and (Mouse.LeftButton) then
		var.M1_LB = 1
	else
		var.M1_LB = -1
	endif
	if (Keyboard.R) and (Mouse.RightButton) then
		var.M1_RB = 1
	else
		var.M1_RB = -1
	endif
	if released (Keyboard.R) then
		var.M1_Z = var.M1_X
	endif
endif

//Limiter
if (var.M1_X < -1) then var.M1_X = -1
if (var.M1_X >  1) then var.M1_X =  1
if (var.M1_Y < -1) then var.M1_Y = -1
if (var.M1_Y >  1) then var.M1_Y =  1
if (var.M1_Z < -1) then var.M1_Z = -1
if (var.M1_Z >  1) then var.M1_Z =  1
if (var.M1_P < -1) then var.M1_P = -1
if (var.M1_P >  1) then var.M1_P =  1
if (var.M1_TX < -1) then var.M1_TX = -1
if (var.M1_TX >  1) then var.M1_TX =  1
if (var.M1_TY < -1) then var.M1_TY = -1
if (var.M1_TY >  1) then var.M1_TY =  1

//Translator
PPJoy1.Analog0 = Var.M1_X	//Ailerons
PPJoy1.Analog1 = Var.M1_Y	//Pitch
PPJoy1.Analog2 = Var.M1_Z	//Rudder
PPJoy1.Analog3 = Var.M1_TX	//Aileron trimmer
PPJoy1.Analog4 = Var.M1_TY	//Pitch trimmer
PPJoy1.Analog5 = Var.M1_P	//Throttle
PPJoy1.Analog6 = Var.M1_LB	//Left brake
PPJoy1.Analog7 = Var.M1_RB	//Right brake
PPJoy1.Digital0 = Var.M1_RL	//Rudder trimmer left
PPJoy1.Digital1 = Var.M1_RR	//Rudder trimmer right
PPJoy1.Digital2 = Var.M1_RC	//Rudder trimmer center